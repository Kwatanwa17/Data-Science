g + facet_grid(. ~ size)
dat <- data.frame(
x = c(apply(replicate(nosim, rexp(n, lambda)), 2, mean),
apply(replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2)), 2, mean)
)
)
dat <- data.frame(
x = c(apply(replicate(nosim, rexp(n, lambda)), 2, mean),
apply(replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2)), 2, mean)
),
size = factor(rep(sim, the), rep(nosim,2)))
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Theorical <- replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2))
Theorical_means <- apply(Theorical, 2, mean)
dat <- cbind(Simulation_means, Theorical_means)
View(dat)
library(ggplot2)
dat <- rbind(Simulation_means, Theorical_means)
View(dat)
rep(c("a","b"),10)
rep(c("a","b"),each = 10)
dat <- data.frame(
x = paste(Simulation_means, Theorical_means),
Type = rep(c("simulation","theorical"), each = nosim)
)
View(dat)
dat <- data.frame(
x = append(Simulation_means, Theorical_means),
Type = rep(c("simulation","theorical"), each = nosim)
)
View(dat)
library(ggplot2)
g <- ggplot(dat, aes(x = x, fill = Type)) +
geom_histogram()
g
g <- ggplot(dat, aes(x = x, fill = Type)) +
geom_histogram(alpha = 0.20, binwidth = 0.3, colour = "black", aes(y = ..density..))
g
View(dat)
g <- g + stat_function(fun = dnorm, size = 2)
g
plot(rnorm(mean = 1/0.2, sd = 1/0.2))
plot(1000,rnorm(mean = 1/0.2, sd = 1/0.2))
plot(rnorm(1000, mean = 1/0.2, sd = 1/0.2))
#Approximately normal
par(mfrow = c(1,1), new = TRUE)
hist(Simulation_means)
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2), add = TRUE, col = "red")
#Approximately normal
par(mfrow = c(1,1), new = TRUE)
hist(Simulation_means)
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2), add = TRUE, col = "red")
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means)
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2), add = TRUE, col = "red")
hist(Theorical_means)
hist(Simulation_means)
hist(Theorical_means)
hist(Simulation_means)
hist(Theorical_means)
hist(Simulation_means)
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Theorical <- replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2))
Theorical_means <- apply(Theorical, 2, mean)
par(mfrow = c(1,2))
hist(Simulation_means)
hist(Theorical_means)
par(mfrow = c(1,2))
hist(Simulation_means, xlim = c(3,6))
hist(Theorical_means, xlim = c(3,6))
par(mfrow = c(1,2))
hist(Simulation_means, xlim = c(2,7))
hist(Theorical_means, xlim = c(2,7))
par(mfrow = c(1,2))
hist(Simulation_means, xlim = c(4,6))
hist(Theorical_means, xlim = c(4,6))
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means)
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2), add = TRUE, col = "red")
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4,6))
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2), add = TRUE, col = "red")
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4,6))
curve(dnorm(x, mean = mean(Theorical_means), sd = sd(Theorical_means)), add = TRUE, col = "red")
curve(dnorm(10, mean = mean(Theorical_means), sd = sd(Theorical_means)), add = TRUE, col = "red")
curve(dnorm(x, mean = mean(Theorical_means), sd = sd(Theorical_means)), add = TRUE, col = "red")
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4,6))
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6
add = TRUE, col = "red")
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = TRUE, col = "red")
#Approximately normal
par(mfrow = c(1,1))
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = TRUE, col = "red")
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = F, col = "red")
hist(Simulation_means,xlim = c(4,6))
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4,6), freq = FALSE)
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = TRUE, col = "red")
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = F, col = "red")
curve(rnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = F, col = "red")
curve(pnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = F, col = "red")
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 4, to = 6,
add = F, col = "red")
curve(dnorm(x, mean = 1/0.2, sd = 1/0.2),
from = 2, to = 8,
add = F, col = "red")
curve(dexp(x, mean = 1/0.2, sd = 1/0.2),
from = 2, to = 8,
add = F, col = "red")
mean(Simulation_means)
mean(Theorical_means)
#Variance
var(Simulation_means)
var(Theorical_means)
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4,6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 2, to = 8,
add = TRUE, col = "red")
#Approximately normal
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4,6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 2, to = 6,
add = TRUE, col = "red")
hist(Simulation_means,xlim = c(3,6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 2, to = 6,
add = TRUE, col = "red")
hist(Simulation_means,xlim = c(4,6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 4, to = 6,
add = TRUE, col = "red")
hist(Simulation_means,xlim = c(4.5,5.5), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 4, to = 6,
add = TRUE, col = "red")
hist(Simulation_means,xlim = c(4.5,5.5), ylim = c(0,3.0) freq = FALSE)
hist(Simulation_means,xlim = c(4.5,5.5), ylim = c(0,3.0), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 4, to = 6,
add = TRUE, col = "red")
#Part 2
library(datasets)
data("ToothGrowth")
dat <- data("ToothGrowth")
data("ToothGrowth")
#Summary of the data
summary(ToothGrowth)
View(ToothGrowth)
#T test
subset(ToothGrowth$supp = "VC")
#T test
subset(ToothGrowth$supp == "VC")
#T test
subset(ToothGrowth, supp == "VC")
#T test
VC <- subset(ToothGrowth, supp == "VC")
OJ <- subset(ToothGrowth, supp == "OJ")
t.test(VC$dose, OJ$dose)
t.test(VC$len, OJ$len)
t.test(VC$dose, OJ$dose, paired = FALSE)
t.test(VC$len, OJ$len, paired = FALSE)
t.test(VC$dose, OJ$dose, paired = FALSE, var.equal = FALSE)
t.test(VC$len, OJ$len, paired = FALSE, var.equal = FALSE)
VC$len
shapiro.test(Simulation_means)
source('C:/Users/Keita/OneDrive/DataScience/Statistical_Inferences/CourseProject.R')
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4.5,5.5), ylim = c(0,3.0), freq = FALSE)
n <- 40
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Theorical_means <- apply(Theorical, 2, mean)
mean(Simulation_means)
mean(Theorical_means)
par(mfrow = c(1,2))
mean(Simulation_means)
mean(Theorical_means)
par(mfrow = c(1,2))
hist(Simulation_means, xlim = c(3,7))
hist(Theorical_means, xlim = c(3,7))
```{r}
par(mfrow = c(1,2))
hist(Simulation_means, xlim = c(3,7))
par(mfrow = c(1,1))
hist(Simulation_means,xlim = c(4.5,5.5), ylim = c(0,3.0), freq = FALSE)
par(mfrow = c(1,1))
curve(dnorm(x, mean = mean(Theorical_means), sd = sd(Theorical_means)),
from = 4, to = 6,
add = TRUE, col = "red")
setwd("C:/Users/Keita/OneDrive/DataScience/Statistical_Inferences")
unlink('CourseProject_cache', recursive = TRUE)
knit_with_parameters('C:/Users/Keita/OneDrive/DataScience/Statistical_Inferences/CourseProject.Rmd')
```{r}
lambda <- 0.2
lambda <- 0.2
nosim <- 1000
nosim <- 1000
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Simulation_sds <- apply(Simulation, 2, sd)
Theorical_means <- apply(Theorical, 2, mean)
n <- 40
lambda <- 0.2
nosim <- 1000
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Simulation_sds <- apply(Simulation, 2, sd)
Theorical <- replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2))
Theorical_means <- apply(Theorical, 2, mean)
Theorical_sds <- apply(Theorical, 2, sd)
n <- 40
lambda <- 0.2
nosim <- 1000
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Simulation_vars <- apply(Simulation, 2, var)
Theorical <- replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2))
Theorical_means <- apply(Theorical, 2, mean)
Theorical_vars <- apply(Theorical, 2, var)
par(mfrow = c(1,2))
hist(Simulation_means, xlim = c(3,7), xlab = "x", main = "Simulation means")
hist(Theorical_means, xlim = c(3,7),  xlab = "x", main = "Theorical means")
par(mfrow = c(1,2))
hist(Simulation_vars, xlim = c(min(Simulation_vars) + 1, max(Simulation_vars) + 1), xlab = "x", main = "Simulation means")
hist(Theorical_vars, xlim = c(min(Theorical_vars) + 1, max(Theorical_vars) + 1),  xlab = "x", main = "Theorical means")
par(mfrow = c(1,2))
hist(Simulation_vars, xlim = c(min(Simulation_vars) - 1, max(Simulation_vars) + 1), xlab = "x", main = "Simulation means")
hist(Theorical_vars, xlim = c(min(Theorical_vars) - 1, max(Theorical_vars) + 1),  xlab = "x", main = "Theorical means")
par(mfrow = c(1,2))
hist(Simulation_vars, xlab = "x", main = "Simulation variances")
hist(Theorical_vars,  xlab = "x", main = "Theorical variances")
n <- 40
lambda <- 0.2
nosim <- 1000
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Simulation_vars <- apply(Simulation, 2, var)
set.seed(1)
Theorical <- replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2))
Theorical_means <- apply(Theorical, 2, mean)
Theorical_vars <- apply(Theorical, 2, var)
par(mfrow = c(1,2))
hist(Simulation_means, xlim = c(3,7), xlab = "x", main = "Simulation means")
hist(Theorical_means, xlim = c(3,7),  xlab = "x", main = "Theorical means")
par(mfrow = c(1,2))
hist(Simulation_vars, xlab = "x", main = "Simulation variances")
hist(Theorical_vars,  xlab = "x", main = "Theorical variances")
par(mfrow = c(1,2))
hist(Simulation_vars, xlim = c(10,50), xlab = "x", main = "Simulation variances")
hist(Theorical_vars, xlim = c(10,50), xlab = "x", main = "Theorical variances")
dat <- data.frame(
Mean = c(Simulation_means, Theorical_means),
Variance = c(Simulation_vars, Theorical_vars),
Type = rep("Simulation", "Theorical", each = nosim)
)
dat <- data.frame(
Mean = c(Simulation_means, Theorical_means),
Variance = c(Simulation_vars, Theorical_vars),
Type = rep(c("Simulation", "Theorical"), each = nosim)
)
View(dat)
library(ggplot2)
g <- ggplot(dat, aes(x = mean, fill = Type)) +
geom_histogram()
g
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram()
g
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 1, position = "dodge")
g
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 1) +
facet_wrap(~cut, ncol = 2)
g
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 1) +
facet_wrap(ncol = 2)
g
library(ggplot2)
g
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 1) +
facet_wrap(~cut, ncol = 2)
g
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 1) +
facet_wrap(~Type, ncol = 2)
g
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~Type, ncol = 2)
g
g2 <- ggplot(dat, aes(x = Variance, fill = Type)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~Type, ncol = 2)
g2
g2 <- ggplot(dat, aes(x = Variance, fill = Type)) +
geom_histogram(binwidth = 10) +
facet_wrap(~Type, ncol = 2)
g2
1/0.2
g2 <- ggplot(dat, aes(x = Variance, fill = Type)) +
geom_histogram(binwidth = 5) +
facet_wrap(~Type, ncol = 2)
g2
par(mfrow = c(1,1))
hist(Simulation_means, xlab = "x", main = "Simulation mean",
xlim = c(3,7), ylim = c(0,0.6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 2, to = 8,
add = TRUE, col = "red")
hist(Simulation_means, xlab = "x", main = "Simulation mean",
xlim = c(3,7), ylim = c(0,0.6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 2, to = 8,
add = TRUE, col = "red")
shapiro.test(Simulation_vars)
par(mfrow = c(1,1))
hist(Simulation_means, xlab = "x", main = "Simulation mean",
xlim = c(3,7), ylim = c(0,0.6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 2, to = 8,
add = TRUE, col = "red")
par(mfrow = c(1,1))
hist(Simulation_vars, xlab = "x", main = "Simulation mean",
xlim = c(3,7), ylim = c(0,0.6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_vars), sd = sd(Simulation_vars)),
from = 2, to = 8,
add = TRUE, col = "red")
par(mfrow = c(1,1))
hist(Simulation_vars, xlab = "x", main = "Simulation mean", freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_vars), sd = sd(Simulation_vars)), add = TRUE, col = "red")
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 5, aes(y = ..density..), colour = black) +
stat_function(fun = dnorm, colour = "brown", args = list(mean = 1/lambda, sd = 1/lambda ))
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 5, aes(y = ..density..), color = black) +
stat_function(fun = dnorm, color = "brown", args = list(mean = 1/lambda, sd = 1/lambda ))
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
stat_function(fun = dnorm, color = "brown", args = list(mean = 1/lambda, sd = 1/lambda ))
g3
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 5, aes(y = ..density..), color = "black") +
stat_function(fun = dnorm, color = "brown", size = 2, args = list(mean = 1/lambda, sd = 1/lambda ))
g3
g3 <- ggplot(dat, aes(x = Simulation_means) +
stat_function(fun = dnorm, color = "brown", size = 2, args = list(mean = 1/lambda, sd = 1/lambda ))
g3 <- ggplot(dat, aes(x = Simulation_means) +
g3 <- ggplot(dat, aes(x = Simulation_means)) +
geom_histogram(binwidth = 5, aes(y = ..density..), color = "black") +
stat_function(fun = dnorm, color = "brown", size = 2, args = list(mean = 1/lambda, sd = 1/lambda ))
g3
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 5, aes(y = ..density..), color = "black") +
facet_wrap(~Type, ncol = 2)
stat_function(fun = dnorm, color = "brown", size = 2, args = list(mean = 1/lambda, sd = 1/lambda ))
g3
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(aes(y = ..density..), color = "black") +
facet_wrap(~Type, ncol = 2)
stat_function(fun = dnorm, color = "brown", size = 2, args = list(mean = 1/lambda, sd = 1/lambda ))
g3
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(aes(y = ..density..), color = "black") +
facet_wrap(~Type, ncol = 2) +
stat_function(fun = dnorm, color = "brown", size = 2, args = list(mean = 1/lambda, sd = 1/lambda ))
g3
g3 <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(aes(y = ..density..), color = "black") +
facet_wrap(~Type, ncol = 2) +
stat_function(fun = dnorm, color = "brown", args = list(mean = 1/lambda, sd = 1/lambda ))
g3
scaled_dat <- apply(matrix(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars), 2, scale)
scaled_dat <- apply(matrix(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars), 1, scale)
a <- matrix(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars
a <- matrix(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars)
a <- matrix(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars)
View(a)
a <- data.frame(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars)
View(a)
scaled_dat <- apply(
data.frame(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars),
2, scale)
library(tidyr)
scaled_dat <- tidyr::gather(scaled_dat, key = "Distribution", value = Simulation_means, Theorical_means, Simulation_vars, Theorical_vars)
library(tidyr)
scaled_dat <- tidyr::gather(scaled_dat, key = "Distribution", value = Simulation_means, Theorical_means, Simulation_vars, Theorical_vars)
scaled_dat <- tidyr::gather(scaled_dat, key = Distribution, value = Simulation_means, Theorical_means, Simulation_vars, Theorical_vars)
scaled_dat <- tidyr::gather(scaled_dat, key = Distribution, value = Simulation_means:Theorical_vars)
scaled_dat <- tidyr::gather(scaled_dat, key = Distribution, value = 1:4)
View(scaled_dat)
scaled_dat <- tidyr::gather(scaled_dat, key = Distribution, value = z_score)
scaled_dat <- as.data.frame(apply(
data.frame(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars),
2, scale))
scaled_dat <- tidyr::gather(scaled_dat, key = Distribution, value = z_score)
View(scaled_dat)
scaled_dat <- tidyr::gather(scaled_dat, key = Distribution_type, value = z_score)
View(scaled_dat)
View(scaled_dat)
scaled_dat <- as.data.frame(apply(
data.frame(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars),
2, scale))
scaled_dat <- tidyr::gather(scaled_dat, key = Distribution_type, value = z_score)
View(scaled_dat)
g5 <- ggplot(scaled_dat, aes(x = z_score, fill =Distribution_type)) +
geom_histogram() +
facet_wrap(~Distribution_type, ncol = 2, nrow = 2) +
stat_function(fun = dnorm, color = "brown", args = list(mean = 0))
g5
g5 <- ggplot(scaled_dat, aes(x = z_score, fill =Distribution_type)) +
geom_histogram(aes(y = ..density..), color = "black") +
facet_wrap(~Distribution_type, ncol = 2, nrow = 2) +
stat_function(fun = dnorm, color = "brown", args = list(mean = 0))
g5
n <- 40
lambda <- 0.2
nosim <- 1000
set.seed(1)
Simulation <- replicate(nosim, rexp(n, lambda))
Simulation_means <- apply(Simulation, 2, mean)
Simulation_vars <- apply(Simulation, 2, var)
set.seed(1)
Theorical <- replicate(nosim, rnorm(40, mean = 1/0.2, sd = 1/0.2))
Theorical_means <- apply(Theorical, 2, mean)
Theorical_vars <- apply(Theorical, 2, var)
dat <- data.frame(
Mean = c(Simulation_means, Theorical_means),
Variance = c(Simulation_vars, Theorical_vars),
Type = rep(c("Simulation", "Theorical"), each = nosim)
)
library(ggplot2)
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 0.5) +
facet_wrap(~Type, ncol = 2)
g
g2 <- ggplot(dat, aes(x = Variance, fill = Type)) +
geom_histogram(binwidth = 5) +
facet_wrap(~Type, ncol = 2)
g2
par(mfrow = c(1,1))
hist(Simulation_means, xlab = "x", main = "Simulation mean",
xlim = c(3,7), ylim = c(0,0.6), freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_means), sd = sd(Simulation_means)),
from = 2, to = 8,
add = TRUE, col = "red")
par(mfrow = c(1,1))
hist(Simulation_vars, xlab = "x", main = "Simulation mean", freq = FALSE)
curve(dnorm(x, mean = mean(Simulation_vars), sd = sd(Simulation_vars)), add = TRUE, col = "red")
scaled_dat <- as.data.frame(apply(
data.frame(Simulation_means, Theorical_means, Simulation_vars, Theorical_vars),
2, scale))
library(tidyr)
scaled_dat_updated <- tidyr::gather(scaled_dat, key = Distribution_type, value = z_score)
g5 <- ggplot(scaled_dat_updated, aes(x = z_score, fill =Distribution_type)) +
geom_histogram(aes(y = ..density..), color = "black") +
facet_wrap(~Distribution_type, ncol = 2, nrow = 2) +
stat_function(fun = dnorm, color = "brown", args = list(mean = 0))
g5
library(datasets)
data("ToothGrowth")
summary(ToothGrowth)
VC <- subset(ToothGrowth, supp == "VC")
OJ <- subset(ToothGrowth, supp == "OJ")
t.test(VC$dose, OJ$dose, paired = FALSE, var.equal = FALSE)
t.test(VC$len, OJ$len, paired = FALSE, var.equal = FALSE)
library(ggplot2)
g <- ggplot(dat, aes(x = Mean, fill = Type)) +
geom_histogram(binwidth = 0.5, color = "black") +
facet_wrap(~Type, ncol = 2)
g
g2 <- ggplot(dat, aes(x = Variance, fill = Type)) +
geom_histogram(binwidth = 5,  color = "black") +
facet_wrap(~Type, ncol = 2)
g2
