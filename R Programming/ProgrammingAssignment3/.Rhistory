cube <- function(x, n) {
x^3
}
cube(3)
cube(3,2)
x <- 1:10
if(x > 5) {
x <- 0
}
x
class(x)
x > 5
f <- function(x) {
y + z
g <- function(y) {
y + z
}
z <- 4
x + g(x)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
install.packages("codetools")
library(codetools)
findGlobals(h, merge=FALSE)[['variables']]
library(datasets)
data(iris)
?iris
iris
iris$Sepal.Length
iris$Sepal.Length[iris$Species == "virginica"]
mean(iris$Sepal.Length[iris$Species == "virginica"])
colMeans(iris)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
summary(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
result <- tapply(mtcars$hp, mtcars$cyl, mean)
result
result[1] - result[3]
abs(result[1] - result[3])
debug(ls)
ls
k
ls
outcome <- "heart attack"
num <- 20
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[,c(2,7,11,17,23)]
colnames(data) <- c("hospital","state","heart attack","heart failure","pneumonia")
setwd("C:/Users/Keita/DataScience/R Programming/ProgrammingAssignment3")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[,c(2,7,11,17,23)]
colnames(data) <- c("hospital","state","heart attack","heart failure","pneumonia")
subdata <- data[,c("hospital","state", outcome)]
View(subdata)
#Data cleaning and chechking outcome value
subdata[,outcome] <- as.numeric(subdata[,outcome])
bads <- applay(subdata[,outcome],2,is.na)
bads <- apply(subdata[,outcome],2,is.na)
bads <- is.na(subdata[,outcome])
subdata2 <- subdata[!bads,]
View(subdata2)
View(data)
View(subdata)
View(data)
outcome <- "heart failure"
subdata <- data[,c("hospital","state", outcome)]
#Data cleaning and chechking outcome value
subdata[,outcome] <- as.numeric(subdata[,outcome])
bads <- is.na(subdata[,outcome])
subdata2 <- subdata[!bads,]
View(subdata2)
outcome <- "heart failure"
num <- 20
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[,c(2,7,11,17,23)]
colnames(data) <- c("hospital","state","heart attack","heart failure","pneumonia")
subdata <- subset(subdata, subdata[,outcome] != "Not Available")
subdata <- data[,c("hospital","state", outcome)]
subdata <- subset(subdata, subdata[,outcome] != "Not Available")
View(subdata)
rankall <- function(outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[,c(2,7,11,17,23)]
colnames(data) <- c("hospital","state","heart attack","heart failure","pneumonia")
#Selecting the columms which will be used.
if (outcome %in% colnames(data)) {
subdata <- data[,c("hospital","state", outcome)]
#Data cleaning and chechking outcome value
subdata <- subset(subdata, subdata[,outcome] != "Not Available")
} else  stop("invalid outcome")
#Changing variable classes and listing the subdata by state name
subdata$state <- factor(subdata$state)
subdata[,outcome] <- as.numeric(subdata[,outcome])
statelist <- split(subdata, subdata$state)
#Ordering each data frame by outcome
statelist <- lapply(statelist, function(x) x[order(x[,outcome], pmax(x[,outcome],x$hospital)),])
#
resumelist <- lapply(statelist, function(x) {
if (num == "best") {
x[1,1]
} else if (num == "worst") {
x[nrow(x),1]
} else x[num,1]
})
state <- names(resumelist)
hospital <- unlist(resumelist)
result <- data.frame(hospital, state)
result
}
tail(rankall("heart failure"), 10)
rankhospital <- function(state, outcome, num = "best") {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[,c(2,7,11,17,23)]
colnames(data) <- c("Hospital name","State","heart attack","heart failure","pneumonia")
if (state %in% data$State) {
subdata <- subset(data, data$State == state)
} else stop("invalid state")
if (outcome %in% colnames(data)) {
subdata <- subdata[,c("Hospital name",outcome)]
} else  stop("invalid outcome")
subdata <- subset(subdata, subdata[,outcome] != "Not Available")
subdata[,outcome] <- as.numeric(subdata[,outcome])
ordered <- subdata[order(subdata[,outcome], pmax(subdata[,outcome],subdata$`Hospital name`)),]
if (num == "best") {
ordered[1,1]
} else if (num == "worst") {
ordered[nrow(subdata),1]
} else ordered[num,1]
}
best <- function(state, outcome) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[,c(2,7,11,17,23)]
colnames(data) <- c("Hospital name","State","heart attack","heart failure","pneumonia")
if (state %in% data$State) {
subdata <- subset(data, data$State == state)
} else stop("invalid state")
if (outcome %in% colnames(data)) {
subdata <- subdata[,c("Hospital name",outcome)]
} else  stop("invalid outcome")
subdata <- subset(subdata, subdata[,outcome] != "Not Available")
lowest <- min(as.numeric(subdata[,2]))
best_hospitals <- subset(subdata, subdata[outcome] == lowest)
best_hospitals <- sort(best_hospitals[,1])
best_hospitals
}
best <- function(state, outcome) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data <- data[,c(2,7,11,17,23)]
colnames(data) <- c("Hospital name","State","heart attack","heart failure","pneumonia")
if (state %in% data$State) {
subdata <- subset(data, data$State == state)
} else stop("invalid state")
if (outcome %in% colnames(data)) {
subdata <- subdata[,c("Hospital name",outcome)]
} else  stop("invalid outcome")
subdata <- subset(subdata, subdata[,outcome] != "Not Available")
lowest <- min(as.numeric(subdata[,2]))
best_hospitals <- subset(subdata, subdata[outcome] == lowest)
best_hospitals <- sort(best_hospitals[,1])
best_hospitals
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
